import requests
import json
from datetime import datetime
import os


def backup_cat_images(text, yandex_token):
    """
    –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∫–æ—Ç–∏–∫–æ–≤ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
    """
    # 1. –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º –æ—Ç –∫–æ—Ç–∏–∫–æ–≤
    cat_api_url = f"https://cataas.com/cat/says/{text}"

    try:
        print("üê± –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Å cataas.com...")
        response = requests.get(cat_api_url, timeout=10)
        response.raise_for_status()

        # 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –≤—Ä–µ–º–µ–Ω–Ω–æ
        image_data = response.content
        image_size = len(image_data)  # –†–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö

        print(f"üì∏ –ö–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞! –†–∞–∑–º–µ—Ä: {image_size} –±–∞–π—Ç")

        # 3. –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
        folder_name = "Fpy-134"
        headers = {
            'Authorization': f'OAuth {yandex_token}',
            'Content-Type': 'application/json'
        }

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É
        create_folder_url = "https://cloud-api.yandex.net/v1/disk/resources"
        folder_params = {'path': folder_name}

        folder_response = requests.put(create_folder_url, headers=headers, params=folder_params)

        if folder_response.status_code not in [201, 409]:  # 201 —Å–æ–∑–¥–∞–Ω–∞, 409 —É–∂–µ exists
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ")
            return None

        # 4. –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
        upload_url = "https://cloud-api.yandex.net/v1/disk/resources/upload"
        file_name = f"{text}.jpg"  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ = —Ç–µ–∫—Å—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏
        file_path = f"{folder_name}/{file_name}"

        upload_params = {
            'path': file_path,
            'overwrite': 'true'
        }

        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        upload_response = requests.get(upload_url, headers=headers, params=upload_params)
        upload_data = upload_response.json()

        if 'href' not in upload_data:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
            return None

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        put_response = requests.put(upload_data['href'], data=image_data)
        if put_response.status_code == 201:
            print(f"‚úÖ –ö–∞—Ä—Ç–∏–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫!")
            print(f"üìÅ –ü–∞–ø–∫–∞: {folder_name}")
            print(f"üìÑ –§–∞–π–ª: {file_name}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞")
            return None

        # 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON
        info_data = {
            'file_name': file_name,
            'file_size_bytes': image_size,
            'file_size_mb': round(image_size / (1024 * 1024), 2),
            'upload_date': datetime.now().isoformat(),
            'source_url': cat_api_url,
            'text_on_image': text,
            'yandex_path': file_path
        }

        json_filename = f"backup_info_{text}.json"
        with open(json_filename, 'w', encoding='utf-8') as f:
            json.dump(info_data, f, ensure_ascii=False, indent=2)

        print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {json_filename}")

        return info_data

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å API: {e}")
        return None
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return None


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    """
    print("üê± –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∫–æ—Ç–∏–∫–æ–≤!")
    print("=" * 50)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    text = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏: ").strip()
    yandex_token = input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞: ").strip()

    if not text or not yandex_token:
        print("‚ùå –¢–µ–∫—Å—Ç –∏ —Ç–æ–∫–µ–Ω –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏!")
        return

    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
    result = backup_cat_images(text, yandex_token)

    if result:
        print("\nüéâ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {result['file_size_mb']} MB")
        print(f"üìÖ –î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {result['upload_date']}")
    else:
        print("\nüòø –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ")


if __name__ == "__main__":
    main()